import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

class DataService {
  final ValueNotifier<List<Map<String, dynamic>>> tableStateNotifier =
      ValueNotifier([]);

  void carregar(index) {
    var res = null;
    print('carregar #1 = antes de carregarCervejas');
    if (index == 1) res = carregarCervejas();
    print('carregar #2 - carregarCervejas retornou $res');
  }

  Future<void> carregarCervejas() async {
    var beersUri = Uri(
      scheme: 'https',
      host: 'random-data-api.com',
      path: 'api/beer/random_beer',
      queryParameters: {'size': '5'},
    );
    print('carregarCervejas #1 - antes do await');

    try {
      var response = await http.get(beersUri);
      if (response.statusCode == 200) {
        var beersJson = jsonDecode(response.body);
        tableStateNotifier.value = List<Map<String, dynamic>>.from(beersJson);
      } else {
        print('Erro na requisição: ${response.statusCode}');
      }
    } catch (e) {
      print('Erro ao carregar cervejas: $e');
    }

    print('carregarCervejas #2 - depois do await');
  }
}

final dataService = DataService();

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(primarySwatch: Colors.deepPurple),
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        appBar: AppBar(
          title: const Text("Dicas"),
        ),
        body: ValueListenableBuilder(
          valueListenable: dataService.tableStateNotifier,
          builder: (_, value, __) {
            return DataTableWidget(
              jsonObjects: value,
              columnNames: ["Nome", "Origem", "Variedade"],
            );
          },
        ),
        bottomNavigationBar: NewNavBar(itemSelectedCallback: dataService.carregar),
      ),
    );
  }
}

class NewNavBar extends HookWidget {
  final _itemSelectedCallback;

  NewNavBar({itemSelectedCallback})
      : _itemSelectedCallback = itemSelectedCallback ?? (int) {}

  @override
  Widget build(BuildContext context) {
    var state = useState(1);

    return BottomNavigationBar(
      onTap: (index) {
        state.value = index;
        _itemSelectedCallback(index);
      },
      currentIndex: state.value,
      items: const [
        BottomNavigationBarItem(
          label: "Cafés",
          icon: Icon(Icons.coffee_outlined),
        ),
        BottomNavigationBarItem(
          label: "Cervejas",
          icon: Icon(Icons.local_drink_outlined),
        ),
        BottomNavigationBarItem(
          label: "Nações",
          icon: Icon(Icons.flag_outlined),
        ),
      ],
    );
  }
}

class DataTableWidget extends StatelessWidget {
  final List<Map<String, dynamic>> jsonObjects;
  final List<String> columnNames;

  DataTableWidget({this.jsonObjects = const [], this.columnNames = const []});

  @override
  Widget build(BuildContext context) {
    return DataTable(
      columns: columnNames
          .map(
            (name) => DataColumn(
              label: Expanded(
                child: Text(
                  name,
                  style: TextStyle(fontStyle: FontStyle.italic),
                ),
              ),
            ),
          )
          .toList(),
      rows: jsonObjects
          .map(
            (obj) => DataRow(
              cells: [
                DataCell(Text(obj["blend_name"] ?? "")),
                DataCell(Text(obj["origin"] ?? "")),
                DataCell(Text(obj["variety"] ?? "")),
              ],
            ),
          )
          .toList(),
    );
  }
}
